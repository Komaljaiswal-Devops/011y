receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"

  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
      paging:
      process:

  prometheus:
    config:
      scrape_configs:
        - job_name: 'python-app'
          scrape_interval: 15s
          static_configs:
            - targets: ['localhost:8000']  # Your Python Flask app
              labels:
                app: 'python-application'
                environment: 'development'
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '.*'
              action: keep

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024

  resource:
    attributes:
      - key: service.name
        value: "system-monitoring"
        action: upsert

exporters:
  prometheusremotewrite:
    endpoint: "http://localhost:8428/api/v1/write"
    tls:
      insecure: true

  loki:
    endpoint: "http://localhost:3100/loki/api/v1/push"
    tls:
      insecure: true  # Optional, only if using HTTP without TLS

  debug:
    verbosity: detailed

service:
  pipelines:
    metrics:
      receivers: [otlp, hostmetrics, prometheus]
      processors: [batch, resource]
      exporters: [prometheusremotewrite, debug]

    traces:
      receivers: [otlp]
      processors: [batch, resource]
      exporters: [debug]

    logs:
      receivers: [otlp]
      processors: [batch, resource]
      exporters: [loki, debug]

  telemetry:
    logs:
      level: debug
